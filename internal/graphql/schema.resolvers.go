package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.80

// // CreatePost is the resolver for the createPost field.
// func (r *mutationResolver) CreatePost(ctx context.Context, title string, content string, commentsDisabled bool) (*generated.Post, error) {
// 	panic(fmt.Errorf("not implemented: CreatePost - createPost"))
// }

// // CreateComment is the resolver for the createComment field.
// func (r *mutationResolver) CreateComment(ctx context.Context, postID string, content string, parentID *string) (*generated.Comment, error) {
// 	panic(fmt.Errorf("not implemented: CreateComment - createComment"))
// }

// // DeletePost is the resolver for the deletePost field.
// func (r *mutationResolver) DeletePost(ctx context.Context, id string) (bool, error) {
// 	panic(fmt.Errorf("not implemented: DeletePost - deletePost"))
// }

// // DeleteComment is the resolver for the deleteComment field.
// func (r *mutationResolver) DeleteComment(ctx context.Context, id string) (bool, error) {
// 	panic(fmt.Errorf("not implemented: DeleteComment - deleteComment"))
// }

// // Post is the resolver for the post field.
// func (r *queryResolver) Post(ctx context.Context, id string) (*generated.Post, error) {
// 	panic(fmt.Errorf("not implemented: Post - post"))
// }

// // Posts is the resolver for the posts field.
// func (r *queryResolver) Posts(ctx context.Context, limit *int32, offset *int32) ([]*generated.Post, error) {
// 	panic(fmt.Errorf("not implemented: Posts - posts"))
// }

// // Comment is the resolver for the comment field.
// func (r *queryResolver) Comment(ctx context.Context, id string) (*generated.Comment, error) {
// 	panic(fmt.Errorf("not implemented: Comment - comment"))
// }

// // Comments is the resolver for the comments field.
// func (r *queryResolver) Comments(ctx context.Context, postID string, limit *int32, offset *int32) ([]*generated.Comment, error) {
// 	panic(fmt.Errorf("not implemented: Comments - comments"))
// }

// // Mutation returns generated.MutationResolver implementation.
// func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// // Query returns generated.QueryResolver implementation.
// func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// type mutationResolver struct{ *Resolver }
// type queryResolver struct{ *Resolver }
